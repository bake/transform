package transform

import "testing"

func TestDilate(t *testing.T) {
	p := []uint8{
		000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000,
		000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000,
		000, 000, 255, 255, 000, 000, 000, 000, 000, 000, 000,
		000, 000, 255, 255, 000, 000, 255, 255, 255, 255, 000,
		000, 000, 255, 255, 000, 000, 255, 255, 255, 255, 000,
		000, 000, 255, 255, 255, 255, 255, 255, 255, 255, 000,
		000, 000, 255, 255, 255, 255, 255, 255, 255, 255, 000,
		000, 000, 000, 000, 000, 000, 255, 255, 255, 255, 000,
		000, 000, 000, 000, 000, 000, 255, 255, 255, 255, 000,
		000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000,
	}
	s := []uint8{
		000, 255, 000,
		255, 255, 255,
		000, 255, 000,
	}

	p, err := Dilate(p, 11, s, 3)
	if err != nil {
		t.Error(err)
	}

	r := []uint8{
		000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000,
		000, 000, 255, 255, 000, 000, 000, 000, 000, 000, 000,
		000, 255, 255, 255, 255, 000, 255, 255, 255, 255, 000,
		000, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		000, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		000, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		000, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		000, 000, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		000, 000, 000, 000, 000, 255, 255, 255, 255, 255, 255,
		000, 000, 000, 000, 000, 000, 255, 255, 255, 255, 000,
	}
	for i := range p {
		if p[i] != r[i] {
			t.Fatalf("on %dx%d: expected %d got %d", i%11, i/11, r[i], p[i])
		}
	}
}

func TestErode(t *testing.T) {
	p := []uint8{
		000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000,
		000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000,
		000, 000, 255, 255, 000, 000, 000, 000, 000, 000, 000,
		000, 000, 255, 255, 000, 000, 255, 255, 255, 255, 000,
		000, 000, 255, 255, 000, 000, 255, 255, 255, 255, 000,
		000, 000, 255, 255, 255, 255, 255, 255, 255, 255, 000,
		000, 000, 255, 255, 255, 255, 255, 255, 255, 255, 000,
		000, 000, 000, 000, 000, 000, 255, 255, 255, 255, 000,
		000, 000, 000, 000, 000, 000, 255, 255, 255, 255, 000,
		000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000,
	}
	s := []uint8{
		000, 255, 000,
		255, 255, 255,
		000, 255, 000,
	}

	p, err := Erode(p, 11, s, 3)
	if err != nil {
		t.Error(err)
	}

	r := []uint8{
		000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000,
		000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000,
		000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000,
		000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000,
		000, 000, 000, 000, 000, 000, 000, 255, 255, 000, 000,
		000, 000, 000, 255, 000, 000, 255, 255, 255, 000, 000,
		000, 000, 000, 000, 000, 000, 255, 255, 255, 000, 000,
		000, 000, 000, 000, 000, 000, 000, 255, 255, 000, 000,
		000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000,
		000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000,
	}
	for i := range p {
		if p[i] != r[i] {
			t.Fatalf("on %dx%d: expected %d got %d", i%11, i/11, r[i], p[i])
		}
	}
}
